knitr::opts_chunk$set(message = FALSE, warning = FALSE)
options(scipen=10000000)
library(tidyverse)
library(sf)
library(RSocrata)
library(viridis)
library(spatstat)
library(raster)
library(spdep)
library(FNN)
library(grid)
library(gridExtra)
library(knitr)
library(kableExtra)
library(tidycensus)
library(mapview)
library(devtools)
library(lubridate)
library(dplyr)
library(pander)
library(ggplot2)
options(scipen=999)
options(tigris_class = "sf")
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source_url("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
paletteGray <- c("gray90", "gray70", "gray50", "gray30", "gray10")
mapTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 14,colour = "black"),
plot.subtitle=element_text(face="italic"),
plot.caption=element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(), axis.title = element_blank(),
axis.text = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "white", fill=NA, size=2)
)
}
plotTheme <- function(base_size = 12) {
theme(
text = element_text( color = "black"),
plot.title = element_text(size = 14,colour = "black"),
plot.subtitle = element_text(face="italic"),
plot.caption = element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_line("grey80", size = 0.1),
panel.grid.minor = element_blank(),
panel.border = element_rect(colour = "white", fill=NA, size=2),
strip.background = element_rect(fill = "grey80", color = "white"),
strip.text = element_text(size=12),
axis.title = element_text(size=12),
axis.text = element_text(size=10),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"),
strip.text.x = element_text(size = 14)
)
}
paletteMap <- c("gray90","gray70","gray50","gray30","gray10")
qBr <- function(df, variable, rnd) {
if (missing(rnd)) {
as.character(quantile(round(df[[variable]],0),
c(.01,.2,.4,.6,.8), na.rm=T))
} else if (rnd == FALSE | rnd == F) {
as.character(formatC(quantile(df[[variable]]), digits = 3),
c(.01,.2,.4,.6,.8), na.rm=T)
}
}
q5 <- function(variable) {as.factor(ntile(variable, 5))}
palette5 <- c("#eff3ff","#bdd7e7","#6baed6","#3182bd","#08519c")
palette4 <- c("#D2FBD4","#92BCAB","#527D82","#123F5A")
palette2 <- c("#9c2108","#08519c")
# NEAREST NEIGHBOR FUNCTION
nn_function <- function(measureFrom,measureTo,k) {
measureFrom_Matrix <-
as.matrix(measureFrom)
measureTo_Matrix <-
as.matrix(measureTo)
nn <-
get.knnx(measureTo, measureFrom, k)$nn.dist
output <-
as.data.frame(nn) %>%
rownames_to_column(var = "thisPoint") %>%
gather(points, point_distance, V1:ncol(.)) %>%
arrange(as.numeric(thisPoint)) %>%
group_by(thisPoint) %>%
summarize(pointDistance = mean(point_distance)) %>%
arrange(as.numeric(thisPoint)) %>%
dplyr::select(-thisPoint) %>%
pull()
return(output)
}
#FISHNET
fishnet <-
st_make_grid(Philadelphia,
cellsize = 1600) %>%
st_sf() %>%
mutate(uniqueID = rownames(.))%>%
st_transform('ESRI:102728')
#make Philadelphia base
Philadelphia <- st_read("http://data.phl.opendata.arcgis.com/datasets/405ec3da942d4e20869d4e1449a2be48_0.geojson")%>%
st_transform('ESRI:102728')
census_api_key("d9ebfd04caa0138647fbacd94c657cdecbf705e9", install = FALSE, overwrite = TRUE)
# Variables: Median Rent, Median HH Income, Population, Bachelor's, No Vehicle (home owner, renter), Households (owner, renter-occupied), total housing units, white
ACS <-
get_acs(geography = "tract", variables = c("B25058_001E", "B19013_001E", "B01003_001E", "B06009_005E", "B25044_003E", "B25044_010E", "B07013_002E", "B07013_003E", "B25001_001E", "B01001A_001E"),
year=2018, state=42, county=101, geometry=T) %>%
st_transform('ESRI:102728')
#Change to wide form
ACS <-
ACS %>%
dplyr::select( -NAME, -moe) %>%
spread(variable, estimate) %>%
dplyr::select(-geometry) %>%
rename(Rent = B25058_001,
medHHInc = B19013_001,
population = B01003_001,
bachelor = B06009_005,
noVehicle_hmow = B25044_003,
noVehicle_hmre = B25044_010,
Households_hmow = B07013_002,
Households_hmre = B07013_003,
housing_units = B25001_001,
white = B01001A_001)
st_drop_geometry(ACS)[1:3,]
ACS <-
ACS %>%
mutate(pctBach = ifelse(population > 0, bachelor / population, 0),
pctWhite = ifelse(population > 0, white / population, 0),
pctNoVehicle = ifelse(Households_hmow + Households_hmre > 0,
(noVehicle_hmow + noVehicle_hmre) /
(Households_hmow + Households_hmre),0),
year = "2018") %>%
dplyr::select(-Households_hmow,-Households_hmre,-noVehicle_hmow,-noVehicle_hmre,-bachelor, -white)
#FISHNET
fishnet <-
st_make_grid(Philadelphia,
cellsize = 1600) %>%
st_sf() %>%
mutate(uniqueID = rownames(.))%>%
st_transform('ESRI:102728')
TreeCanopyLoss2<-
fishnet%>%
st_join(TreeCanopyLoss)%>%
group_by(uniqueID)%>%
summarise(Area = sum(AreaM))%>%
mutate(pctLoss = Area / 1600)%>%
mutate(pctLoss = as.numeric(pctLoss), Area = as.numeric(Area))
TreeCanopyLoss <-
TreeCanopy%>%
filter(CLASS_NAME == "Loss")%>%
mutate(AreaM= SHAPE_Area * .093903)
TreeCanopy <- st_read("https://drive.google.com/drive/folders/15rk8Lj3TJFUpWQnG6SeKXfU-Gpwo5JXd")%>%
st_transform('ESRI:102728')
TreeCanopy <- st_read(https://drive.google.com/drive/folders/15rk8Lj3TJFUpWQnG6SeKXfU-Gpwo5JXd)%>%
TreeCanopy <- st_read("https://drive.google.com/drive/folders/15rk8Lj3TJFUpWQnG6SeKXfU-Gpwo5JXd")%>%
st_transform('ESRI:102728')
TreeCanopy <- st_read("/Users/annaduan/Documents/GitHub/tree-canopy-loss/TreeCanopyChange_2008_2018-shp/TreeCanopyChange_2008_2018.shp")%>%
st_transform('ESRI:102728')
TreeCanopy$SHAPE_Area <- st_area(TreeCanopy)
TreeCanopyLoss <-
TreeCanopy%>%
filter(CLASS_NAME == "Loss")%>%
mutate(AreaM= SHAPE_Area * .093903)
TreeCanopyLoss2<-
fishnet%>%
st_join(TreeCanopyLoss)%>%
group_by(uniqueID)%>%
summarise(Area = sum(AreaM))%>%
mutate(pctLoss = Area / 1600)%>%
mutate(pctLoss = as.numeric(pctLoss), Area = as.numeric(Area))
ggplot()+
geom_sf(data = TreeCanopyLoss2, aes(fill = Area))+
scale_fill_viridis()+
labs(title= "Total Tree Canopy Loss in each Grid Cell")+
mapTheme()
ggplot()+
geom_sf(data = TreeCanopyLoss2, aes(fill = pctLoss))+
scale_fill_viridis()+
labs(title= "Total Tree Canopy Loss / Cell Area ")+
mapTheme()
ACS_net <-
fishnet %>%
st_join(ACS)
ACS_net <-
fishnet %>%
st_join(ACS) %>%
group_by(uniqueID)
str(ACS_net)
glimpse(ACS_net)
View(ACS_net)
ggplot() +
geom_sf(data = fishnet, colour = "black") +
geom_sf(data = ACS, colour = "red") +
mapTheme()
ggplot() +
geom_sf(data = fishnet, colour = "black") +
geom_sf(data = ACS, colour = "red", fill = "transparent") +
mapTheme()
ggplot() +
geom_sf(data = fishnet, colour = "pink") +
geom_sf(data = ACS, colour = "black", fill = "transparent") +
mapTheme()
ACS_net <-
fishnet %>%
st_join(.,ACS)
mapview(ACS_net)
ACS_net <-
fishnet %>%
st_centroid() %>%
st_join(.,ACS)
mapview(ACS_net)
ACS_net <-
fishnet %>%
st_centroid() %>%
st_join(.,ACS) %>%
st_join(.,fishnet)
mapview(ACS_net)
ACS_net <-
st_centroid(fishnet) %>%
st_join(.,ACS) %>%
st_join(.,fishnet)
mapview(ACS_net)
ACS_net <-
st_centroid(fishnet) %>%
st_join(.,ACS) %>%
st_join(fishnet)
mapview(ACS_net)
View(ACS_net)
ggplot() +
geom_sf(data = fishnet, colour = "pink") +
geom_sf(data = ACS, colour = "black", fill = "transparent") +
mapTheme()
fishnet <- fishnet %>%
st_intersection(.,Philadelphia)
ggplot() +
geom_sf(data = fishnet, colour = "pink") +
geom_sf(data = ACS, colour = "black", fill = "transparent") +
mapTheme()
ACS_net <-
st_centroid(fishnet) %>%
st_join(.,ACS) %>%
st_join(fishnet)
mapview(ACS_net)
View(ACS_net)
View(ACS)
View(fishnet)
